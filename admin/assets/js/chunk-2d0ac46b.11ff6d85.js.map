{"version":3,"sources":["webpack:///./src/views/monitor/RedisInfo.vue?f9cb","webpack:///src/views/monitor/RedisInfo.vue","webpack:///./src/views/monitor/RedisInfo.vue?531b","webpack:///./src/views/monitor/RedisInfo.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","width","margin-top","attrs","gutter","span","ref","type","height","options","memory","chartOptions","series","key","orientation","_v","border-bottom","_l","info","index","border-top","padding","_s","description","value","staticRenderFns","RedisInfovue_type_script_lang_js_","name","data","loading","chart","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","dataLabels","stroke","curve","title","text","align","markers","size","xaxis","yaxis","legend","xdata","colors","redisInfo","timer","beforeDestroy","clearInterval","mounted","_this","minMemory","minSize","maxMemory","maxSize","setInterval","$route","path","indexOf","axios_default","a","all","$get","then","r","currentMemory","used_memory","currentSize","dbSize","time","$moment","format","push","length","shift","$refs","memoryInfo","updateSeries","slice","updateOptions","categories","min","max","keySize","catch","console","error","$message","monitor_RedisInfovue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"yHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,CAAaC,MAAA,OAAAC,aAAA,SAAoC,CAAAJ,EAAA,SAAcK,MAAA,CAAOC,OAAA,IAAY,CAAAN,EAAA,SAAcK,MAAA,CAAOE,KAAA,KAAW,CAAAP,EAAA,aAAkBQ,IAAA,aAAAH,MAAA,CAAwBI,KAAA,OAAAC,OAAA,MAAAC,QAAAf,EAAAgB,OAAAC,aAAAC,OAAAlB,EAAAgB,OAAAE,WAA2F,GAAAd,EAAA,SAAkBK,MAAA,CAAOE,KAAA,KAAW,CAAAP,EAAA,aAAkBQ,IAAA,UAAAH,MAAA,CAAqBI,KAAA,OAAAC,OAAA,MAAAC,QAAAf,EAAAmB,IAAAF,aAAAC,OAAAlB,EAAAmB,IAAAD,WAAqF,OAAAd,EAAA,SAAsBK,MAAA,CAAOC,OAAA,IAAY,CAAAN,EAAA,aAAkBK,MAAA,CAAOW,YAAA,SAAsB,CAAApB,EAAAqB,GAAA,eAAAjB,EAAA,SAAoCE,YAAA,CAAagB,gBAAA,sBAAqCtB,EAAAuB,GAAAvB,EAAA,mBAAAwB,EAAAC,GAA6C,OAAArB,EAAA,MAAgBe,IAAAM,EAAAnB,YAAA,CAAuBoB,aAAA,sBAAkC,CAAAtB,EAAA,MAAWE,YAAA,CAAaqB,QAAA,eAAwB,CAAA3B,EAAAqB,GAAArB,EAAA4B,GAAAJ,EAAAL,QAAAf,EAAA,MAAsCE,YAAA,CAAaqB,QAAA,eAAwB,CAAA3B,EAAAqB,GAAArB,EAAA4B,GAAAJ,EAAAK,gBAAAzB,EAAA,MAA8CE,YAAA,CAAaqB,QAAA,eAAwB,CAAA3B,EAAAqB,GAAArB,EAAA4B,GAAAJ,EAAAM,cAAiC,YACphCC,EAAA,wBCyBAC,EAAA,CACAC,KAAA,YACAC,KAFA,WAGA,OACAC,SAAA,EACAnB,OAAA,CACAE,OAAA,GACAD,aAAA,CACAmB,MAAA,CACAC,WAAA,CACAC,SAAA,EACAC,OAAA,SACAC,iBAAA,CACAC,MAAA,MAGAC,QAAA,CACAC,MAAA,GAEAC,KAAA,CACAN,SAAA,IAGAO,WAAA,CACAP,SAAA,GAEAQ,OAAA,CACAC,MAAA,UAEAC,MAAA,CACAC,KAAA,oBACAC,MAAA,QAEAC,QAAA,CACAC,KAAA,GAEAC,MAAA,GACAC,MAAA,GACAC,OAAA,CACAZ,MAAA,IAGAT,KAAA,GACAsB,MAAA,IAEArC,IAAA,CACAD,OAAA,GACAD,aAAA,CACAmB,MAAA,CACAC,WAAA,CACAC,SAAA,EACAC,OAAA,SACAC,iBAAA,CACAC,MAAA,MAGAC,QAAA,CACAC,MAAA,GAEAC,KAAA,CACAN,SAAA,IAGAO,WAAA,CACAP,SAAA,GAEAmB,OAAA,YACAX,OAAA,CACAC,MAAA,UAEAC,MAAA,CACAC,KAAA,mBACAC,MAAA,QAEAC,QAAA,CACAC,KAAA,GAEAC,MAAA,GACAC,MAAA,GACAC,OAAA,CACAZ,MAAA,IAGAT,KAAA,GACAsB,MAAA,IAEAE,UAAA,GACAC,MAAA,OAGAC,cA1FA,WA2FA3D,KAAA0D,OACAE,cAAA5D,KAAA0D,QAGAG,QA/FA,WA+FA,IAAAC,EAAA9D,KACA+D,EAAA,KACAC,EAAA,KACAC,GAAA,KACAC,GAAA,KACAlE,KAAA0D,MAAAS,YAAA,YACA,IAAAL,EAAAM,OAAAC,KAAAC,QAAA,UACAC,EAAAC,EAAAC,IAAA,CACAX,EAAAY,KAAA,kBACAZ,EAAAY,KAAA,sBACAC,KAAA,SAAAC,GACA,IAAAC,EAAAD,EAAA,GAAA3C,KAAA6C,YAAA,IACAC,EAAAH,EAAA,GAAA3C,KAAA+C,OACAH,EAAAd,IACAA,EAAAc,GAEAA,EAAAZ,IACAA,EAAAY,GAEAE,EAAAf,IACAA,EAAAe,GAEAA,EAAAb,IACAA,EAAAa,GAEA,IAAAE,EAAAnB,EAAAoB,UAAAC,OAAA,YACArB,EAAA/C,OAAAkB,KAAAmD,KAAAP,GACAf,EAAA/C,OAAAwC,MAAA6B,KAAAH,GACAnB,EAAA5C,IAAAe,KAAAmD,KAAAL,GACAjB,EAAA5C,IAAAqC,MAAA6B,KAAAH,GACAnB,EAAA/C,OAAAkB,KAAAoD,QAAA,IACAvB,EAAA/C,OAAAkB,KAAAqD,QACAxB,EAAA/C,OAAAwC,MAAA+B,SAEAxB,EAAA5C,IAAAe,KAAAoD,QAAA,IACAvB,EAAA5C,IAAAe,KAAAqD,QACAxB,EAAA5C,IAAAqC,MAAA+B,SAEAxB,EAAAyB,MAAAC,WAAAC,aAAA,CACA,CACAzD,KAAA,SACAC,KAAA6B,EAAA/C,OAAAkB,KAAAyD,WAGA5B,EAAAyB,MAAAC,WAAAG,cAAA,CACAvC,MAAA,CACAwC,WAAA9B,EAAA/C,OAAAwC,MAAAmC,SAEArC,MAAA,CACAwC,IAAA9B,EACA+B,IAAA7B,KAEA,MACAH,EAAAyB,MAAAQ,QAAAN,aAAA,CACA,CACAzD,KAAA,QACAC,KAAA6B,EAAA5C,IAAAe,KAAAyD,WAGA5B,EAAAyB,MAAAQ,QAAAJ,cAAA,CACAvC,MAAA,CACAwC,WAAA9B,EAAA5C,IAAAqC,MAAAmC,SAEArC,MAAA,CACAwC,IAAA7B,EAAA,EACA8B,IAAA5B,EAAA,KAEA,MACAJ,EAAA5B,UACA4B,EAAA5B,SAAA,KAEA8D,MAAA,SAAApB,GACAqB,QAAAC,MAAAtB,GACAd,EAAAqC,SAAAD,MAAA,eACApC,EAAAJ,OACAE,cAAAE,EAAAJ,UAIA,KACA1D,KAAA0E,KAAA,cAAAC,KAAA,SAAAC,GACAd,EAAAL,UAAAmB,EAAA3C,cC1MkWmE,EAAA,cCOlWC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACAtG,EACAgC,GACF,EACA,KACA,KACA,MAIe0E,EAAA,WAAAH","file":"assets/js/chunk-2d0ac46b.11ff6d85.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\",\"margin-top\":\"1rem\"}},[_c('a-row',{attrs:{\"gutter\":8}},[_c('a-col',{attrs:{\"span\":12}},[_c('apexchart',{ref:\"memoryInfo\",attrs:{\"type\":\"area\",\"height\":\"350\",\"options\":_vm.memory.chartOptions,\"series\":_vm.memory.series}})],1),_c('a-col',{attrs:{\"span\":12}},[_c('apexchart',{ref:\"keySize\",attrs:{\"type\":\"area\",\"height\":\"350\",\"options\":_vm.key.chartOptions,\"series\":_vm.key.series}})],1)],1),_c('a-row',{attrs:{\"gutter\":8}},[_c('a-divider',{attrs:{\"orientation\":\"left\"}},[_vm._v(\"Redis详细信息\")]),_c('table',{staticStyle:{\"border-bottom\":\"1px solid #f1f1f1\"}},_vm._l((_vm.redisInfo),function(info,index){return _c('tr',{key:index,staticStyle:{\"border-top\":\"1px solid #f1f1f1\"}},[_c('td',{staticStyle:{\"padding\":\".7rem 1rem\"}},[_vm._v(_vm._s(info.key))]),_c('td',{staticStyle:{\"padding\":\".7rem 1rem\"}},[_vm._v(_vm._s(info.description))]),_c('td',{staticStyle:{\"padding\":\".7rem 1rem\"}},[_vm._v(_vm._s(info.value))])])}),0)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div style=\"width: 100%;margin-top: 1rem\">\n        <a-row :gutter=\"8\">\n            <a-col :span=\"12\">\n                <apexchart ref=\"memoryInfo\" type=area height=350 :options=\"memory.chartOptions\"\n                           :series=\"memory.series\"/>\n            </a-col>\n            <a-col :span=\"12\">\n                <apexchart ref=\"keySize\" type=area height=350 :options=\"key.chartOptions\" :series=\"key.series\"/>\n            </a-col>\n        </a-row>\n        <a-row :gutter=\"8\">\n            <a-divider orientation=\"left\">Redis详细信息</a-divider>\n            <table style=\"border-bottom: 1px solid #f1f1f1;\">\n                <tr v-for=\"(info, index) in redisInfo\" :key=\"index\" style=\"border-top: 1px solid #f1f1f1;\">\n                    <td style=\"padding: .7rem 1rem\">{{info.key}}</td>\n                    <td style=\"padding: .7rem 1rem\">{{info.description}}</td>\n                    <td style=\"padding: .7rem 1rem\">{{info.value}}</td>\n                </tr>\n            </table>\n        </a-row>\n    </div>\n</template>\n<script>\n    import axios from 'axios/index'\n\n    export default {\n        name: 'RedisInfo',\n        data() {\n            return {\n                loading: true,\n                memory: {\n                    series: [],\n                    chartOptions: {\n                        chart: {\n                            animations: {\n                                enabled: true,\n                                easing: 'linear',\n                                dynamicAnimation: {\n                                    speed: 3000\n                                }\n                            },\n                            toolbar: {\n                                show: false\n                            },\n                            zoom: {\n                                enabled: false\n                            }\n                        },\n                        dataLabels: {\n                            enabled: false\n                        },\n                        stroke: {\n                            curve: 'smooth'\n                        },\n                        title: {\n                            text: 'Redis内存实时占用情况（kb）',\n                            align: 'left'\n                        },\n                        markers: {\n                            size: 0\n                        },\n                        xaxis: {},\n                        yaxis: {},\n                        legend: {\n                            show: false\n                        }\n                    },\n                    data: [],\n                    xdata: []\n                },\n                key: {\n                    series: [],\n                    chartOptions: {\n                        chart: {\n                            animations: {\n                                enabled: true,\n                                easing: 'linear',\n                                dynamicAnimation: {\n                                    speed: 3000\n                                }\n                            },\n                            toolbar: {\n                                show: false\n                            },\n                            zoom: {\n                                enabled: false\n                            }\n                        },\n                        dataLabels: {\n                            enabled: false\n                        },\n                        colors: ['#f5564e'],\n                        stroke: {\n                            curve: 'smooth'\n                        },\n                        title: {\n                            text: 'Redis key实时数量（个）',\n                            align: 'left'\n                        },\n                        markers: {\n                            size: 0\n                        },\n                        xaxis: {},\n                        yaxis: {},\n                        legend: {\n                            show: false\n                        }\n                    },\n                    data: [],\n                    xdata: []\n                },\n                redisInfo: [],\n                timer: null\n            }\n        },\n        beforeDestroy() {\n            if (this.timer) {\n                clearInterval(this.timer)\n            }\n        },\n        mounted() {\n            let minMemory = 1e10;\n            let minSize = 1e10;\n            let maxMemory = -1e10;\n            let maxSize = -1e10;\n            this.timer = setInterval(() => {\n                if (this.$route.path.indexOf('redis') !== -1) {\n                    axios.all([\n                        this.$get('redis/keysSize'),\n                        this.$get('redis/memoryInfo')\n                    ]).then((r) => {\n                        let currentMemory = r[1].data.used_memory / 1000;\n                        let currentSize = r[0].data.dbSize;\n                        if (currentMemory < minMemory) {\n                            minMemory = currentMemory\n                        }\n                        if (currentMemory > maxMemory) {\n                            maxMemory = currentMemory\n                        }\n                        if (currentSize < minSize) {\n                            minSize = currentSize\n                        }\n                        if (currentSize > maxSize) {\n                            maxSize = currentSize\n                        }\n                        let time = this.$moment().format('hh:mm:ss');\n                        this.memory.data.push(currentMemory);\n                        this.memory.xdata.push(time);\n                        this.key.data.push(currentSize);\n                        this.key.xdata.push(time);\n                        if (this.memory.data.length >= 6) {\n                            this.memory.data.shift();\n                            this.memory.xdata.shift()\n                        }\n                        if (this.key.data.length >= 6) {\n                            this.key.data.shift();\n                            this.key.xdata.shift()\n                        }\n                        this.$refs.memoryInfo.updateSeries([\n                            {\n                                name: '内存(kb)',\n                                data: this.memory.data.slice()\n                            }\n                        ]);\n                        this.$refs.memoryInfo.updateOptions({\n                            xaxis: {\n                                categories: this.memory.xdata.slice()\n                            },\n                            yaxis: {\n                                min: minMemory,\n                                max: maxMemory\n                            }\n                        }, true, true);\n                        this.$refs.keySize.updateSeries([\n                            {\n                                name: 'key数量',\n                                data: this.key.data.slice()\n                            }\n                        ]);\n                        this.$refs.keySize.updateOptions({\n                            xaxis: {\n                                categories: this.key.xdata.slice()\n                            },\n                            yaxis: {\n                                min: minSize - 2,\n                                max: maxSize + 2\n                            }\n                        }, true, true);\n                        if (this.loading) {\n                            this.loading = false\n                        }\n                    }).catch((r) => {\n                        console.error(r);\n                        this.$message.error('获取Redis信息失败');\n                        if (this.timer) {\n                            clearInterval(this.timer)\n                        }\n                    })\n                }\n            }, 3000);\n            this.$get('redis/info').then((r) => {\n                this.redisInfo = r.data.data\n            })\n        }\n    }\n</script>\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RedisInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RedisInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RedisInfo.vue?vue&type=template&id=145dc7d1&\"\nimport script from \"./RedisInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./RedisInfo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}